name: MicroPython

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: MicroPython ${{ matrix.name }}
    runs-on: ubuntu-24.04
    continue-on-error: true
    strategy:
      matrix:
        include:
        - name: pico_w_inky
        - name: pico2_w_inky

    env:
      # MicroPython version will be contained in github.event.release.tag_name for releases
      RELEASE_FILE: ${{ matrix.name }}-${{ github.event.release.tag_name || github.sha }}-micropython
      CI_PROJECT_ROOT: ${{ github.workspace }}/src-${{ github.sha }}
      CI_BUILD_ROOT: ${{ github.workspace }}
      CI_USE_ENV: 1

    steps:
    - name: Compiler Cache Fixup
      run: |
        mkdir -p /home/runner/.ccache

    - name: "CCache: Restore saved cache"
      uses: actions/cache@v4
      with:
        path: /home/runner/.ccache
        key: ccache-micropython-${{ matrix.name }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ccache-micropython-${{ matrix.name }}-${{ github.ref }}
          ccache-micropython-${{ matrix.name }}-

    - name: "Checkout Inky-Frame"
      uses: actions/checkout@v4
      with:
        repository: kruton/inky-frame
        submodules: true
        path: ${{ env.CI_PROJECT_ROOT }}

    - name: "Checkout weather-dash"
      uses: actions/checkout@v4
      with:
        path: ${{ env.CI_PROJECT_ROOT }}/weather-dash

    - name: "Checkout mrequests"
      uses: actions/checkout@v4
      with:
        repository: SpotlightKid/mrequests
        path: ${{ env.CI_PROJECT_ROOT }}/mrequests

    - name: "Install Arm GNU Toolchain (arm-none-eabi-gcc)"
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '13.3.Rel1'

    - name: "Create Python virtualenv"
      shell: bash
      run: |
        python3 -m venv "$CI_BUILD_ROOT/.dir2uf2"

    - name: "Prepare tools & dependencies"
      shell: bash
      run: |
        source "$CI_BUILD_ROOT/.dir2uf2/bin/activate"
        source $CI_PROJECT_ROOT/ci/micropython.sh && ci_debug
        mkdir -p $CI_BUILD_ROOT
        ci_apt_install_build_deps
        ci_prepare_all

    - name: "Copy weather-dash files to Inky-Frame"
      run: |
        cp $CI_PROJECT_ROOT/weather-dash/client/* $CI_PROJECT_ROOT/examples/inkylauncher/
        perl -pi -e 's/Word Clock/Weather/g; s/word_clock/weather/g' ${{ env.CI_PROJECT_ROOT }}/examples/inkylauncher/main.py

        cd $CI_PROJECT_ROOT/mrequests
        mkdir -p build/mrequests
        for file in mrequests/*.py; do \
          $CI_BUILD_ROOT/micropython/mpy-cross/build/mpy-cross -o build/${file/.py/.mpy} $file
        done
        mkdir -p $CI_PROJECT_ROOT/examples/inkylauncher/lib/mrequests
        cp build/mrequests/* $CI_PROJECT_ROOT/examples/inkylauncher/lib/mrequests

    - name: "MicroPython: Configure"
      shell: bash
      run: |
        source "$CI_BUILD_ROOT/.dir2uf2/bin/activate"
        source $CI_PROJECT_ROOT/ci/micropython.sh && ci_debug
        micropython_version
        ci_cmake_configure ${{ matrix.name }}

    - name: "MicroPython: Build"
      shell: bash
      run: |
        source "$CI_BUILD_ROOT/.dir2uf2/bin/activate"
        source $CI_PROJECT_ROOT/ci/micropython.sh && ci_debug
        ci_cmake_build ${{ matrix.name }}
        mv "$CI_BUILD_ROOT/${{ matrix.name }}.uf2" "$CI_BUILD_ROOT/$RELEASE_FILE.uf2"
        mv "$CI_BUILD_ROOT/${{ matrix.name }}-with-filesystem.uf2" "$CI_BUILD_ROOT/$RELEASE_FILE-with-filesystem.uf2"

    - name: "Artifacts: Upload .uf2"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_FILE }}.uf2
        path: ${{ env.CI_BUILD_ROOT }}/${{ env.RELEASE_FILE }}.uf2

    - name: "Artifacts: Upload .uf2 (With Filesystem)"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_FILE }}-with-filesystem.uf2
        path: ${{ env.CI_BUILD_ROOT }}/${{ env.RELEASE_FILE }}-with-filesystem.uf2

    - name: "Release: Upload .uf2"
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.CI_BUILD_ROOT }}/${{ env.RELEASE_FILE }}.uf2

    - name: "Release: Upload .uf2 (With Filesystem)"
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.CI_BUILD_ROOT }}/${{ env.RELEASE_FILE }}-with-filesystem.uf2
